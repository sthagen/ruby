@ ProgramNode (location: (0...27))
├── locals: [:d]
└── statements:
    @ StatementsNode (location: (0...27))
    └── body: (length: 1)
        └── @ CaseNode (location: (0...27))
            ├── predicate:
            │   @ SymbolNode (location: (5...7))
            │   ├── opening_loc: (5...6) = ":"
            │   ├── value_loc: (6...7) = "a"
            │   ├── closing_loc: ∅
            │   └── unescaped: "a"
            ├── conditions: (length: 1)
            │   └── @ InNode (location: (8...23))
            │       ├── pattern:
            │       │   @ ArrayPatternNode (location: (11...18))
            │       │   ├── constant:
            │       │   │   @ ConstantPathNode (location: (11...15))
            │       │   │   ├── parent:
            │       │   │   │   @ ConstantReadNode (location: (11...12))
            │       │   │   │   └── name: :B
            │       │   │   ├── child:
            │       │   │   │   @ ConstantReadNode (location: (14...15))
            │       │   │   │   └── name: :C
            │       │   │   └── delimiter_loc: (12...14) = "::"
            │       │   ├── requireds: (length: 1)
            │       │   │   └── @ LocalVariableTargetNode (location: (16...17))
            │       │   │       ├── name: :d
            │       │   │       └── depth: 0
            │       │   ├── rest: ∅
            │       │   ├── posts: (length: 0)
            │       │   ├── opening_loc: (15...16) = "["
            │       │   └── closing_loc: (17...18) = "]"
            │       ├── statements:
            │       │   @ StatementsNode (location: (21...23))
            │       │   └── body: (length: 1)
            │       │       └── @ SymbolNode (location: (21...23))
            │       │           ├── opening_loc: (21...22) = ":"
            │       │           ├── value_loc: (22...23) = "e"
            │       │           ├── closing_loc: ∅
            │       │           └── unescaped: "e"
            │       ├── in_loc: (8...10) = "in"
            │       └── then_loc: ∅
            ├── consequent: ∅
            ├── case_keyword_loc: (0...4) = "case"
            └── end_keyword_loc: (24...27) = "end"
