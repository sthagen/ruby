@ ProgramNode (location: (0...28))
├── locals: []
└── statements:
    @ StatementsNode (location: (0...28))
    └── body: (length: 1)
        └── @ CallNode (location: (0...28))
            ├── receiver:
            │   @ InterpolatedRegularExpressionNode (location: (0...19))
            │   ├── opening_loc: (0...1) = "/"
            │   ├── parts: (length: 2)
            │   │   ├── @ EmbeddedStatementsNode (location: (1...5))
            │   │   │   ├── opening_loc: (1...3) = "\#{"
            │   │   │   ├── statements:
            │   │   │   │   @ StatementsNode (location: (3...4))
            │   │   │   │   └── body: (length: 1)
            │   │   │   │       └── @ IntegerNode (location: (3...4))
            │   │   │   │           └── flags: decimal
            │   │   │   └── closing_loc: (4...5) = "}"
            │   │   └── @ StringNode (location: (5...18))
            │   │       ├── flags: ∅
            │   │       ├── opening_loc: ∅
            │   │       ├── content_loc: (5...18) = "(?<match>bar)"
            │   │       ├── closing_loc: ∅
            │   │       └── unescaped: "(?<match>bar)"
            │   ├── closing_loc: (18...19) = "/"
            │   └── flags: ∅
            ├── call_operator_loc: ∅
            ├── message_loc: (20...22) = "=~"
            ├── opening_loc: ∅
            ├── arguments:
            │   @ ArgumentsNode (location: (23...28))
            │   └── arguments: (length: 1)
            │       └── @ StringNode (location: (23...28))
            │           ├── flags: ∅
            │           ├── opening_loc: (23...24) = "'"
            │           ├── content_loc: (24...27) = "bar"
            │           ├── closing_loc: (27...28) = "'"
            │           └── unescaped: "bar"
            ├── closing_loc: ∅
            ├── block: ∅
            ├── flags: ∅
            └── name: "=~"
