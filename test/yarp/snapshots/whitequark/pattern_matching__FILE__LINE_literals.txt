@ ProgramNode (location: (8...111))
├── locals: []
└── statements:
    @ StatementsNode (location: (8...111))
    └── body: (length: 1)
        └── @ CaseNode (location: (8...111))
            ├── predicate:
            │   @ ArrayNode (location: (13...51))
            │   ├── elements: (length: 3)
            │   │   ├── @ SourceFileNode (location: (14...22))
            │   │   │   └── filepath: "whitequark/pattern_matching__FILE__LINE_literals.txt"
            │   │   ├── @ CallNode (location: (24...36))
            │   │   │   ├── receiver:
            │   │   │   │   @ SourceLineNode (location: (24...32))
            │   │   │   ├── call_operator_loc: ∅
            │   │   │   ├── message_loc: (33...34) = "+"
            │   │   │   ├── opening_loc: ∅
            │   │   │   ├── arguments:
            │   │   │   │   @ ArgumentsNode (location: (35...36))
            │   │   │   │   └── arguments: (length: 1)
            │   │   │   │       └── @ IntegerNode (location: (35...36))
            │   │   │   │           └── flags: decimal
            │   │   │   ├── closing_loc: ∅
            │   │   │   ├── block: ∅
            │   │   │   ├── flags: ∅
            │   │   │   └── name: "+"
            │   │   └── @ SourceEncodingNode (location: (38...50))
            │   ├── opening_loc: (13...14) = "["
            │   └── closing_loc: (50...51) = "]"
            ├── conditions: (length: 1)
            │   └── @ InNode (location: (62...99))
            │       ├── pattern:
            │       │   @ ArrayPatternNode (location: (65...99))
            │       │   ├── constant: ∅
            │       │   ├── requireds: (length: 3)
            │       │   │   ├── @ SourceFileNode (location: (66...74))
            │       │   │   │   └── filepath: "whitequark/pattern_matching__FILE__LINE_literals.txt"
            │       │   │   ├── @ SourceLineNode (location: (76...84))
            │       │   │   └── @ SourceEncodingNode (location: (86...98))
            │       │   ├── rest: ∅
            │       │   ├── posts: (length: 0)
            │       │   ├── opening_loc: (65...66) = "["
            │       │   └── closing_loc: (98...99) = "]"
            │       ├── statements: ∅
            │       ├── in_loc: (62...64) = "in"
            │       └── then_loc: ∅
            ├── consequent: ∅
            ├── case_keyword_loc: (8...12) = "case"
            └── end_keyword_loc: (108...111) = "end"
